#!/bin/bash


# Some resources
# https://github.com/necolas/dotfiles/blob/master/shell/bash_prompt


on_git() {
  git rev-parse --is-inside-work-tree &>/dev/null
}

prompt_git() {
  local s=""
  local branchName=""

  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then
      
      if [[ -O "$(git rev-parse --show-toplevel)/.git/index" ]]; then
        git update-index --really-refresh -q &>/dev/null
      fi

      
        
      # Check for uncommitted changes
      if ! $(git diff --quiet --ignore-submodules --cached); then
                s+="+";
      fi
      # Check for unstaged changes
      if ! $(git diff-files --quiet --ignore-submodules --); then
        s+="!";
      fi
      # Check for untracked files
      if [ -n "$(git ls-files --others --exclude-standard)" ]; then
        s+="?";
      fi
      # Check for unstashed files.
      if git rev-parse --verify refs/stash &>/dev/null; then
        s+="$";
      fi
    fi


    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                git rev-parse --short HEAD 2> /dev/null || \
                printf "(unknown)")"
    [ -n "${s}" ] && s="|${blue}${s}"
    printf "%s" "${violet}${branchName}${s}"
  else
    return
  fi
}

set_prompt() {
  local hostStyle=""
  local userStyle=""
  local parenStyle=""

	if [[ "${USER}" == "root" ]]; then
		userStyle="${bold}${red}"
	else
		userStyle="${orange}"
	fi

	if [[ "${SSH_TTY}" ]]; then
		hostStyle="${bold}${red}"
	else
		hostStyle="${yellow}"
	fi

	parenStyle="${cyan}"

	PS1="\[\033]0;\w\007\]"
	PS1+="\n"
#	PS1+="\[${parenStyle}\][\[${reset}\]\!\[${parenStyle}\]]" #history
#	PS1+="\[${parenStyle}\][\[${reset}\]\j\[${parenStyle}\]]" #jobs

# Username
	PS1+="\[${parenStyle}\]["
  PS1+="\[${userStyle}\]\u" #username	
	PS1+="\[${parenStyle}\]]"

# Host
#	PS1+="\[${reset}${cyan}\] at "
	PS1+="\[${parenStyle}\]["
	PS1+="\[${hostStyle}\]\h"	#host
	PS1+="\[${parenStyle}\]]"

# Working directory
#	PS1+="\n"
	PS1+="\[${parenStyle}\]["
#	PS1+="\[${reset}${cyan}\] in "
	PS1+="\[${green}\]\w"
	PS1+="\[${parenStyle}\]]"
# Git status
  PS1+="\`if \$(on_git) ; then "
	PS1+="echo \"\[${parenStyle}\]\"["
	PS1+="\$(prompt_git)"
  PS1+="\"\[${parenStyle}\]\"]"
  PS1+="; fi\`"
	PS1+="\n"
	PS1+="\[${reset}${base1}\]\$ \[${reset}\]"
	export PS1
}

base00=""
base01=""
base02=""
base03=""
base0=""
base1=""
base2=""
base3=""
yellow=""
orange=""
red=""
magenta=""
violet=""
blue=""
cyan=""
green=""
reset=""
bold=""


if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  tput sgr0

	bold=$(tput bold)
	reset=$(tput sgr0)
	#Solarized Colors
	base00=$(tput setaf 241)
	base01=$(tput setaf 240)
	base02=$(tput setaf 235)
	base03=$(tput setaf 234)
	base0=$(tput setaf 244)
	base1=$(tput setaf 245)
	base2=$(tput setaf 254)
	base3=$(tput setaf 230)
	yellow=$(tput setaf 136)
	orange=$(tput setaf 166)
	red=$(tput setaf 160)
	magenta=$(tput setaf 125)
	violet=$(tput setaf 61)
	blue=$(tput setaf 33)
	cyan=$(tput setaf 37)
	green=$(tput setaf 64)
else
	:
fi


set_prompt
unset set_prompt
unset bold reset base00 base01 base02 base03 base0 base1 base2 base3 yellow orange red magenta violet blue cyan green

# vim:ft=sh
